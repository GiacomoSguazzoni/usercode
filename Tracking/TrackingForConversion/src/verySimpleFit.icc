  if ( size<3 ){
    p0 = 0.;
    p1 = 0.;
    return -1.;
  }

  //Initialize
  double Swx2 = 0.;
  double Swy = 0.;
  double Swx = 0.;
  double Swxy = 0.;
  double Sw = 0.;

  //Accumulate
  for(int i=0; i<size; i++){
    double w = 1./e2y[i];
    double x = ax[i];
    double y = ay[i];
    Swx2 += w*x*x;
    Swy += w*y;
    Swx += w*x;
    Swxy += w*x*y;
    Sw += w;
  }

  double oneOverDelta = 1./(Sw*Swx2-Swx*Swx); 
  p0 = oneOverDelta*(Sw*Swxy-Swx*Swy);
  p1 = oneOverDelta*(Swx2*Swy-Swx*Swxy);

  //chi2
  double chi2 = 0.;
  for(int i=0; i<size; i++){

    double w = 1/e2y[i];
    double x = ax[i];
    double y = ay[i];

    chi2 += w*sqr(y - p0 - p1*x);

  }

  return chi2/(size-2);
